usertype text;
usertype KeyMaterial;
hashfunction H;
const SEQ,Capability,Policy,Texp:text;
const info:text;
const type1, type2;
macro ACue={UE,Capability,Policy,Texp}sk(HAHM);
protocol sphp(UE,HAHM,VAHM,TBS, SBS)
{
    role HAHM
    {
        var ck: KeyMaterial;
        var ik: KeyMaterial;
        match(ck, H(k(UE, SBS), UE, TBS, type1));
        match(ik, H(k(UE, SBS), UE, TBS, type2));
        send_1(HAHM, SBS, H(k(HAHM, UE), UE, SBS, SEQ));
        send_2(HAHM,VAHM,{UE,SEQ,ck, ik}pk(VAHM));
    }

    role SBS 
    {
         var Ksbs: KeyMaterial;
         recv_1(HAHM, SBS, H(k(HAHM, UE), UE, SBS, SEQ));
         match(Ksbs, H(k(HAHM, UE), UE, SBS, SEQ));
         claim(SBS, Secret,Ksbs);
    }

    role VAHM
    {
        fresh N2: Nonce;
        var MAC1,MAC2,MAC3: text;
        var N1: Nonce;
        var Key: KeyMaterial;
        var ck: KeyMaterial;
        var ik: KeyMaterial;
        var sessionKey: KeyMaterial;
        recv_2(HAHM,VAHM,{UE, SEQ, ck, ik}pk(VAHM));
        recv_3(UE,VAHM,{N1,SEQ,ACue}ck,MAC1);
        match(MAC2, H(ik,UE,VAHM,N1,N2,SEQ));
        send_4(VAHM,UE,{N2,SEQ}ik,MAC2);
        match(Key, H(ck, ik,UE,TBS,N1,N2,SEQ,info));
        match(MAC3, H(Key,UE,VAHM,N1,N2,SEQ));
        recv_5(UE,VAHM,MAC3);
        match(MAC3, H(Key,UE,VAHM,N1,N2,SEQ));
        match(sessionKey, H(VAHM,UE,TBS,SEQ));
        send_6(VAHM,TBS,{sessionKey}k(TBS, VAHM));
        claim(VAHM, Secret,Key);
        claim(VAHM, Alive);
        claim(VAHM, Weakagree);
        claim(VAHM, Niagree);
        claim(VAHM, Nisynch);
    }

    role UE
    {
        fresh N1:Nonce;
        var N2:Nonce;
        var MAC1,MAC2,MAC3:text;
        var Key: KeyMaterial;
        var ck: KeyMaterial;
        var ik: KeyMaterial;
        match(ck, H(k(UE, HAHM), UE, TBS, type1));
        match(ik, H(k(UE, HAHM), UE, TBS, type2));
        match(MAC1, H(ik,UE,VAHM,N1,SEQ,ACue));
        send_3(UE,VAHM,{N1,SEQ,ACue}ck,MAC1);
        recv_4(VAHM,UE,{N2,SEQ}ck,MAC2);
        match(Key, H(ck, ik,UE,VAHM,N1,N2,SEQ,info));
        match(MAC3, H(Key,UE,VAHM,N1,N2,SEQ));
        send_5(UE,VAHM,MAC3);
        claim(UE, Secret,Key);
        claim(UE, Alive);
        claim(UE, Weakagree);
        claim(UE, Niagree);
        claim(UE, Nisynch);
    }

    role TBS
    {
        var sessionKey: KeyMaterial;
        recv_6(VAHM,TBS,{sessionKey}k(TBS, AHM));
        claim(TBS, Secret,sessionKey);
    }

    
}


